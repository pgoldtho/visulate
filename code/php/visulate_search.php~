<?php
    require_once dirname(__FILE__)."/classes/SmartyInit.class.php";
    require_once dirname(__FILE__)."/classes/database/rnt_search.class.php";
    require_once dirname(__FILE__)."/classes/UtlConvert.class.php";
    require_once dirname(__FILE__)."/classes/SQLExceptionMessage.class.php";
    require_once dirname(__FILE__)."/classes/database/pr_reports.class.php";
    require_once dirname(__FILE__)."/classes/database/rnt_cities.class.php";
    require_once dirname(__FILE__)."/classes/User.class.php";  
    require_once dirname(__FILE__)."/classes/database/sunbiz_updates.class.php";
    require_once 'HTML/QuickForm/Renderer/ArraySmarty.php';
    require_once "HTML/QuickForm.php";

    require_once dirname(__FILE__)."/classes/Menu.class.php";
    require_once dirname(__FILE__)."/classes/Menu3.class.php";
    
if (!function_exists('http_response_code'))
{
    function http_response_code($newcode = NULL)
    {
        static $code = 200;
        if($newcode !== NULL)
        {
            header('X-PHP-Response-Code: '.$newcode, true, $newcode);
            if(!headers_sent())
                $code = $newcode;
        }
        return $code;
    }
}
    
    
///////////////////////////////////////////
// Display Functions
///////////////////////////////////////////
  function process_rentals($smarty, $template_prefix)
  {
    if ($_GET['state'])
       $state     = htmlentities($_GET['state'], ENT_QUOTES);
    else
       $state = null;
    if ($_GET['county'])
        $county    = htmlentities($_GET['county'], ENT_QUOTES);
    else
      $county = null;
    if ($_GET['agreement'])
      $agreement = htmlentities($_GET['agreement'], ENT_QUOTES);
    else
      $agreement = null;
   
    $dbSearch = new LISTSearch($smarty->connection);
    
    if (($agreement=='ANY') or (is_null($agreement))) {
      if (is_null($state)){
        $searchList = $dbSearch->getStateCountList();
        }
      elseif($county=='ANY'){
        $searchList = $dbSearch->getCountyList($state);
        }
      else{
        $searchList = $dbSearch->getPropertyList($county, $state);
        }
      $smarty->assign('locations', $searchList);    
      $smarty->assign("pageTitle", "Visulate Rental Property Search Results $state $county");
      $smarty->assign("pageDesc", "List of $state $county rental properties.");
      $smarty->display($template_prefix.'_search.tpl');
      }
    else{
       $searchList = $dbSearch->getPropertyList($county, $state);
       $property   = $dbSearch->getAgreement($agreement);
       foreach ($property as $a){
         $photos =  $dbSearch->getPhotos($a['PROPERTY_ID']);
         }
       $smarty->assign('locations', $searchList);    
       $smarty->assign('agreement', $property);
       $smarty->assign('pictures', $photos);
       $smarty->assign("reportCode", "RENTALS");
       $smarty->assign("pageTitle", "Visulate Rental Property Search Result");
       $smarty->assign("pageDesc", "Property available for rent");
       $smarty->display($template_prefix.'_agreement.tpl');
      
      }
      return;
    }

  function get_region_submenu($regionList)
  {
    $href = $GLOBALS["PATH_FORM_ROOT"]."visulate_search.php?REPORT_CODE=CITY&state=FL";
    $submenu = array();
    $submenu[] = array("href" => $href,
                       "value"=> "All");

                     
    foreach($regionList as $region)
      {
      $submenu[] = array("href" => $href."&region_id=".$region["REGION_ID"],
                         "value"=> $region["NAME"]);
      }
    return $submenu;
   }

  function get_skey($region_id, $regions)
  {
    if ($region_id == 0) $skey = 0; 
    elseif ($region_id == $regions[0][REGION_ID]) $skey = 1;
    elseif ($region_id == $regions[1][REGION_ID]) $skey = 2;
    elseif ($region_id == $regions[2][REGION_ID]) $skey = 3;
    elseif ($region_id == $regions[3][REGION_ID]) $skey = 4;
    elseif ($region_id == $regions[4][REGION_ID]) $skey = 5;
    elseif ($region_id == $regions[5][REGION_ID]) $skey = 6;
    elseif ($region_id == $regions[6][REGION_ID]) $skey = 7;
    elseif ($region_id == $regions[7][REGION_ID]) $skey = 8;
    elseif ($region_id == $regions[8][REGION_ID]) $skey = 9;
    elseif ($region_id == $regions[9][REGION_ID]) $skey = 10;
    else  $skey = 0;
    
    return $skey;
   }

  function process_city($smarty, $template_prefix)
  {
    $dbSearch = new LISTSearch($smarty->connection);
    $dbCity   = new RNTCities($smarty->connection);
    $dbReport = new PRReports($smarty->connection);
     if ($_GET['state'])
      {
           $state     = htmlentities($_GET['state'], ENT_QUOTES);
           $smarty->assign('getState', $state);
           }
        else
           $state = 'FL';
    if ($_GET['county'])
      {
        $county    = htmlentities($_GET['county'], ENT_QUOTES);
        $smarty->assign('getCounty', $county);
        $commlist = $dbReport->getMLScommercial($county, $state);
        $smarty->assign('commlist', $commlist);
        }
    else
      $county = null;
    if ($_GET['city'])
      {
        $city    = htmlentities($_GET['city'], ENT_QUOTES);
        $ziplist = $dbReport->getMLSzipcodes($city, $county, $state);
        $smarty->assign('ziplist', $ziplist);
        $smarty->assign('getCity', $city);
      }
    else
      $city = null;
    
    if ($_GET['ucode'])
        $ucode    = htmlentities($_GET['ucode'], ENT_QUOTES);
    else
      $ucode = null;
    
    if ($_GET['year'])
        $year    = htmlentities($_GET['year'], ENT_QUOTES);
    else
      $year = null;

    if ($_GET['yucode'])
        $yucode    = htmlentities($_GET['yucode'], ENT_QUOTES);
    else
      $yucode = null;

     if ($_GET['region_id'])
        $region_id    = htmlentities($_GET['region_id'], ENT_QUOTES);
    else
      $region_id = 0;

    if ($state == 'FL') $display_state = 'Florida';
    
    


    $regions = $dbCity->getRegions();
    $skey = get_skey($region_id, $regions);
    if ($skey == 0) $region_id = NULL;
    

    $submenu3 = get_region_submenu($regions);
    $smarty->assign("submenu2_1", $submenu3);
    $smarty->assign("skey", $skey);
    $smarty->assign("region_id", $region_id);
    
    if (is_null($state)){
        $searchList = $dbSearch->getStateCountList();
        }
    elseif($county==null||$county=='ANY'){
        $searchList = $dbSearch->getCountyStats($state, $region_id);
        if ($region_id)
        {
         $cityDataValues = $dbCity->getRegionDesc($region_id);
         $pageDesc =  $cityDataValues["META_DESCRIPTION"];
         $displayLocation = $cityDataValues["DISPLAY_NAME"]." Florida"; }
        else
        {$cityDataValues = $dbCity->getCityDesc("ANY", "ANY", $state);
        $displayLocation = "Florida";
        $pageDesc = "Florida is the fourth largest state in the country in terms of both population and GDP.
        If Florida was a country, it would be in the top twenty of the world.
        Florida's economy is larger than Saudi Arabia's or the combined economies of Argentina and Peru.";
        $smarty->assign("canonical", "/");
        }
        }
    else{
        $searchList = $dbSearch->getCountyCities($county, $state);
        $cityDataValues = $dbCity->getCityDesc("ANY", $county, $state);
        $displayLocation = ucwords(strtolower($county))." County ".$display_state;
        $pageDesc =  $cityDataValues["META_DESCRIPTION"];
        }
    
    if ($yucode && $year) {
        $salesData = $dbSearch->getCitySalesData($city, $county, $state, $year, $yucode);
        if ($city) $cityValues = $dbSearch->getCityValues($city, $county, $state, $yucode);
        }
        else
        {
         if ($county) $cityData = $dbSearch->getCityData($city, $county, $state, $ucode);
         if ($city)
            { $cityValues = $dbSearch->getCityValues($city, $county, $state, '');
              $cityDataValues = $dbCity->getCityDesc($city, $county, $state);
              $pageDesc =  $cityDataValues["META_DESCRIPTION"];
              $displayLocation = ucwords(strtolower($city)).", ".$display_state;
            }
         }
    

    $pcountPlot = '[';
    $sqftPlot = '[';
    
    foreach($cityData as $cityd){
      if ($pcountPlot != '['){
          $pcountPlot = $pcountPlot.", ";
          $sqftPlot = $sqftPlot.", ";
           }
      $pcountPlot = $pcountPlot."['".str_replace('&', '&amp;', $cityd["PROP_USAGE"])."',".$cityd["PROP_COUNT"]."]";
      $sqftPlot = $sqftPlot."['".str_replace('&', '&amp;', $cityd["PROP_USAGE"])."',".$cityd["TOTAL_SQFT"]."]";
    }
    $pcountPlot = $pcountPlot."]";
    $sqftPlot = $sqftPlot."]";
    
    $valuePlot = array();
    $curUcode  = 8888888888888;
    $aPlot = '[';
    $bPlot = '[';
    $cPlot = '[';
    foreach ($cityValues as $value){

      if ($curUcode == 8888888888888){
          $curUcode = $value["UCODE"];
        }
      elseif ($curUcode != $value["UCODE"]){
        $valuePlot[$curUcode] = array( 'A' => $aPlot."]"
                                     , 'B' => $bPlot."]"
                                     , 'C' => $cPlot."]");
        $curUcode = $value["UCODE"];
        $aPlot = '[';
        $bPlot = '[';
        $cPlot = '[';
    
      }
    
      if ($value["PROP_CLASS"] == 'A'){
        if ($aPlot != '[') $aPlot = $aPlot.", ";
         $aPlot = $aPlot."[".$value["YEAR"].",".$value["MEDIAN_PRICE"]."]";
      }
      if ($value["PROP_CLASS"] == 'B'){
        if ($bPlot != '[') $bPlot = $bPlot.", ";
        $bPlot = $bPlot."[".$value["YEAR"].",".$value["MEDIAN_PRICE"]."]";
      }
      if ($value["PROP_CLASS"] == 'C'){
        if ($cPlot != '[') $cPlot = $cPlot.", ";
        $cPlot = $cPlot."[".$value["YEAR"].",".$value["MEDIAN_PRICE"]."]";
      }
    }
    $valuePlot[$curUcode] = array( 'A' => $aPlot."]"
                                 , 'B' => $bPlot."]"
                                 , 'C' => $cPlot."]");
    
 //print_r($searchList);
    $smarty->assign('locations', $searchList);    
    $smarty->assign('salesData', $salesData);
    $smarty->assign('cityData', $cityData);
    $smarty->assign('cityDataValues', $cityDataValues);
    $smarty->assign('cityValues', $cityValues);
    $smarty->assign('pcountPlot', $pcountPlot);
    $smarty->assign('sqftPlot', $sqftPlot);
    $smarty->assign('vPlot', $valuePlot);
    $smarty->assign('displayLocation', $displayLocation);
    
    if ($city != null)
      {
      $smarty->assign("pageTitle", "".ucwords(strtolower($city)).", $display_state ");
      $smarty->assign("pageDesc", "Real Estate Market Data for $state $display_county cities.");
      $smarty->assign("pageText",
      ucwords(strtolower($city))." is located in ".ucfirst(strtolower($county))." County, $display_state.
      This page shows a breakdown by usage type of sales data for property sales in "
      .ucwords(strtolower($city))."  A sales summary for each property type is shown in a series of tables
      and graphs.  They show the median price per sq ft for A, B and C class properties in ".ucwords(strtolower($city))
      .".  Click on the year on any of the summary tables to see a list of individual sales for the property type.");
      }
    elseif($county != null)
      {
      $smarty->assign("pageTitle", ucfirst(strtolower($county))." County, $display_state");
      $smarty->assign("pageText",
      "This page shows market data for ".ucfirst(strtolower($county))." County, $display_state.  Click on the items
      in the County Sales History menu to see a breakdown of property sales by year/month or usage type.
      Click on the items in the ".ucfirst(strtolower($county))." Cities menu to see a breakdown of sales
      data for each city in ".ucfirst(strtolower($county)));
       $listings = $dbReport->getPriceRange("COMMERCIAL", $county, $state);
       $smarty->assign('listingTable', $listings);
      }
    elseif ($displayLocation)
      {
       $smarty->assign("pageTitle", $displayLocation);
      }
    else
      {
      $smarty->assign("pageTitle", "Florida Real Estate");
      $smarty->assign("pageText",
      "There are 67 counties in Florida.
      This page provides access to real estate data for each of them derived from Florida property tax
      and other public records.  Select a county from  the list on the left of the page.");
      }

    

    
    $smarty->assign("pageDesc", $pageDesc);
    $smarty->display($template_prefix.'_city.tpl');
    //$smarty->display('visulate_city.tpl');
    
      
    return;
    }

  function getMaxMin($listings, $max, $zcode)
  {
    $rv = array();
    if ($max=='ANY')
     {
     $max = 'B_MEDIAN';
     }
    if (!$listings[$zcode])
    {
         $rv["maxval"] = 100000;
         $rv["minval"] = 0;
    }
    elseif ($max=='A_MAX')
        {
         $rv["maxval"] = $listings[$zcode]['A_MAX'];
         $rv["minval"] = $listings[$zcode]['A_MEDIAN'];
        }
    elseif($max=='A_MEDIAN')
        {
         $rv["maxval"] = $listings[$zcode]['A_MEDIAN'];
         $rv["minval"] = $listings[$zcode]['A_MIN'];
        }
    elseif($max=='A_MIN')
        {
         $rv["maxval"] = $listings[$zcode]['A_MIN'];
         $rv["minval"] = $listings[$zcode]['B_MEDIAN'];
        }
    elseif($max=='B_MEDIAN')
        {
         $rv["maxval"] = $listings[$zcode]['B_MEDIAN'];
         $rv["minval"] = $listings[$zcode]['C_MAX'];
        }
    elseif($max=='C_MAX')
        {
         $rv["maxval"] = $listings[$zcode]['C_MAX'];
         $rv["minval"] = $listings[$zcode]['C_MEDIAN'];
        }
    elseif($max=='C_MEDIAN')
        {
         $rv["maxval"] = $listings[$zcode]['C_MEDIAN'];
         $rv["minval"] = 0;
        }
    if (($listings[$zcode])&&($listings[$zcode]['TOTAL'] < 15)) $rv["minval"] = 0;
    return $rv;
    }

  function process_listing($smarty, $template_prefix, $dbReport)    
  {
    if ($_GET['qtype'])
      $qtype = htmlentities($_GET['qtype'], ENT_QUOTES);
    else
      $qtype = 'COMMERCIAL';
    
    if ($_GET['state'])
       $state     = htmlentities($_GET['state'], ENT_QUOTES);
    else
       $state = 'FL';
    
    if ($_GET['county'])
        $county    = htmlentities($_GET['county'], ENT_QUOTES);
    else
      $county = 'ANY';
    
    if ($_GET['ZCODE'])
      $zcode = htmlentities($_GET['ZCODE'], ENT_QUOTES);
    else
      $zcode = 'ANY';
    
    if ($_GET['MAX'])
      $max = htmlentities($_GET['MAX'], ENT_QUOTES);
    else
      $max = 'ANY';
    
    if ($_GET['PROP_ID'])
      $prop_id = htmlentities($_GET['PROP_ID'], ENT_QUOTES);
    else
      $prop_id = 'ANY';
      
    $dbSearch = new LISTSearch($smarty->connection);
    if ($qtype=='LAND')
      {
       $pageTitle = 'Vacant Land for Sale';
       $pageDesc = 'List of vacant land parcels currently listed for sale';
      }
    elseif ($qtype=='RENTAL')
      {
       $pageTitle = 'Rental Listings';
       $pageDesc = 'List of residential rental properties';
      }
    elseif ($qtype=='COMMERCIAL')
      {
       $pageTitle = 'Income and Commercial';
       $pageDesc = 'List of income and commercial properties';
      }
    elseif ($qtype=='LATEST')
      {
       $pageTitle = 'Latest Listings';
       $pageDesc = 'Latest listings added to Visulate';
      }
    elseif ($qtype=='HOMEPAGE')
      {
       $pageTitle = 'Latest Commercial Listings';
       $pageDesc = 'Latest Commercial listings added to Visulate';
      }      
    else
      {
       $qtype='RESIDENTIAL';
       $pageTitle = 'Homes for Sale';
       $pageDesc = 'List of single family homes, condos, townhouses currently listed for sale';
      }
    
    if (($prop_id=='ANY') or (is_null($prop_id))) {
      // Search for a property
      if ($state=='ANY'){
        $searchList = $dbSearch->getStateCountListings($qtype);
        $url = '/rental/visulate_search.php?REPORT_CODE=LISTINGS&qtype='.$qtype;
        $pageTitle = 'Search '.$pageTitle;
        }
      elseif($county=='ANY' ){
        $searchList = $dbSearch->getCountyListings($qtype, $state);
        $pageTitle = 'Florida Commercial Real Estate - Visulate';
        $pageDesc .= 'Latest commercial real estate listings in Florida.  Search by county and usage type.';
        $url = '/rental/visulate_search.php?REPORT_CODE=LISTINGS&qtype='.$qtype.'&state='.$state;
        $displayLocation = 'Florida';

        $listings = $dbReport->getFloridaPriceRange();
        $smarty->assign('listingTable', $listings);
        }
      else
       {
        $searchList = $dbSearch->getCountyListings($qtype, $state);
        $listings = $dbReport->getPriceRange($qtype, $county, $state);
    
        $smarty->assign('listingTable', $listings);
        $url = '/rental/visulate_search.php?REPORT_CODE=LISTINGS&qtype='.$qtype.'&state='.$state.'&county='.$county;
        $smarty->assign('selected', 'style="color: blue; font-weight: bold;"');
        $displayLocation = $county.', County Florida';
        if ($zcode!='ANY')
          {
           if ($max == 'ANY') $max = 'B_MEDIAN';
           $values = getMaxMin($listings, $max, $zcode);
           if ($listings[$zcode])
           {
             $pageTitle .= ' in '.$listings[$zcode]["NAME"]
                        .' Priced from $'.number_format($values["minval"]+1)
                        .' to $'.number_format($values["maxval"]);
             $pageDesc .= ' in '.$listings[$zcode]["NAME"]
                              .' Priced from $'.number_format($values["minval"])
                              .' to $'.number_format($values["maxval"]);
            }
           $smarty->assign('max', $max);
           $smarty->assign('zcode', $zcode);
          }
        else
          {
           $pageTitle = 'Search '.$pageTitle.' in '. ucfirst(strtolower($county)).' County, '.$state;
           $pageDesc .= ' in '. ucfirst(strtolower($county)).' County, '.$state;
           $displayLocation = $county.', County Florida';
          }

       }

      $smarty->assign('locations', $searchList);
      $smarty->assign('current_county', $county);
      $smarty->assign('mapLocation', $county.' county '.$state);
      $smarty->assign('url', $url);
      $smarty->assign('qtype', $qtype);
      $smarty->assign('county', $county);
      $smarty->assign("reportCode", "LISTINGS");    
      $smarty->assign("pageTitle", $pageTitle);
      $smarty->assign("pageDesc", $pageDesc);
      $smarty->assign("displayLocation", $displayLocation);
      $smarty->display($template_prefix.'_search.tpl');
      }
    else{
       // Found a property, display its details
       $url = '/rental/visulate_search.php?REPORT_CODE=LISTINGS&qtype='.$qtype.'&state='.$state.'&county='.$county;
       $report_data      = $dbReport->getPropertyDetails($prop_id);
       $canonical        = 'property/'.$prop_id;

       $display_property = $report_data["PROPERTY"]["ADDRESS1"]
                           .", ".$report_data["PROPERTY"]["CITY"];
    
       $ucode = 90001; // default value 90001 = Single Family
       foreach ($report_data["PROPERTY_USAGE"] as $k => $v)
                   {
                   $ucode = $k;
                   }
       $mls      = $dbReport->getMLS($prop_id);

       // Populate MLS list for display on left of page
       if ($qtype=='LATEST')
        {$mlsList = $dbReport->getMLSlatest($county, $state);}
       elseif ($qtype=='HOMEPAGE')
         {$mlsList = $dbReport->getLatestCommercial();}
       else {
         $listings = $dbReport->getPriceRange($qtype, $county, $state);
         $values = getMaxMin($listings, $max, $zcode);
         $mlsList  = $dbReport->getPriceRangeListings($qtype, $zcode, $values["maxval"], $values["minval"], $county);}
    
       $photos   = $dbReport->getPropPhotos($prop_id);
//   $comps            = $dbReport->getSimilar($prop_id);

     if ($report_data["PROPERTY"]["PUMA"])
       {
       $dbSearch = new LISTSearch($smarty->connection);
       $puma = $dbSearch->getPumaSummary($report_data["PROPERTY"]["PUMA"]); 
       $smarty->assign("puma", $puma);
       }

       $tax_ft = $dbReport->getTaxFt($prop_id);
       $smarty->assign("tax_ft", $tax_ft);

       $default_values = $dbReport->getDefaults($prop_id, $ucode);
    
       $lease_type = $dbReport->getLeaseType($prop_id);
       $pclass     = $default_values["A"]["PCLASS"];
          
       foreach ($default_values as $k => $v){
            if ($lease_type == 'Triple Net')
              {
              $default_values[$k]["INSURANCE"]
                = $default_values[$k]["INSURANCE"] * $default_values[$k]["VACANCY_PERCENT"]/100;
              $default_values[$k]["MAINTENANCE"]
                = $default_values[$k]["MAINTENANCE"] * $default_values[$k]["VACANCY_PERCENT"]/100;;
              $default_values[$k]["UTILITIES"]
                = $default_values[$k]["UTILITIES"] * $default_values[$k]["VACANCY_PERCENT"]/100;;
              $default_values[$k]["TAX"]
                = $default_values[$k]["TAX"] * $default_values[$k]["VACANCY_PERCENT"]/100;;
              }
        $default_values[$k]["NOI"] = round(($default_values[$k]["ANNUAL_RENT"] - $default_values[$k]["VACANCY_AMOUNT"]
                  - $default_values[$k]["INSURANCE"] - $default_values[$k]["MAINTENANCE"]
                  - $default_values[$k]["UTILITIES"]
                  - $default_values[$k]["TAX"] - $default_values[$k]["MGT_AMOUNT"]));
               $default_values[$k]["VALUE"] = round($default_values[$k]["NOI"] / $default_values[$k]["CAP_RATE"] * 100);
        $default_values[$k]["DOWN"] = round($default_values[$k]["VALUE"] * 25/100);
        $default_values[$k]["LOAN"] = round($default_values[$k]["VALUE"] * 75/100);
        $default_values[$k]["COSTS"] = round($default_values[$k]["VALUE"] * 4/100);
        }
        $smarty->assign("defaults", $default_values);
        $smarty->assign("p_class", $pclass);
        $smarty->assign("pvalues", $default_values[$pclass]);


       $pageDesc = $mls[1]["LINK_TEXT"]." ".$mls[1]["TITLE"];
       if ($pageDesc == " ") $pageDesc = $display_property." is no longer listed for sale.";
       
       $smarty->assign("data", $report_data);
       $smarty->assign("data1", $searchList);
//       $smarty->assign("comps", $comps);
       $smarty->assign("photos", $photos);
       $smarty->assign("prop_id", $prop_id);
       $smarty->assign("lease_type", $lease_type);
       $smarty->assign("url", $url);
       $smarty->assign('max', $max);
       $smarty->assign('zcode', $zcode);
       $smarty->assign('qtype', $qtype);
       $smarty->assign("mls", $mls);
       $smarty->assign("searchResults", $mlsList);
       $smarty->assign("pageTitle", "$display_property");
       $smarty->assign("pageDesc", $pageDesc);
       $smarty->assign("canonical", $canonical);

       if  ($template_prefix=="mobile")
         {$menu3 = array();
          foreach ($mlsList as $k => $v)
           {$menu3[] = array
               ("href"=>$url."&MAX=".$max."&ZCODE=".$zcode."&PROP_ID=".$mlsList[$k]["PROP_ID"]
               , "value"=>$mlsList[$k]["ADDRESS1"]);
           // if ($mlsList[$k]["PROP_ID"] == $prop_id) {$skey = $k;}
           }
           $menu3[] = array
               ("href"=>$url."&MAX=".$max."&ZCODE=".$zcode
               , "value"=>"Return to Search Screen");
           $smarty->assign(submenu2_1, $menu3);
           $smarty->assign(skey, $skey);
           $smarty->assign(listingReport, "Y");

           }
           
       $html_report = $smarty->display($template_prefix."-property-details.tpl"); 
      }
    }

  function ajax_listings($smarty, $template_prefix, $dbReport)    
  {
    if ($_GET['qtype'])
      $qtype = htmlentities($_GET['qtype'], ENT_QUOTES);
    else
      $qtype = 'ANY';
    
    if ($_GET['state'])
       $state     = htmlentities($_GET['state'], ENT_QUOTES);
    else
       $state = 'ANY';
    
    if ($_GET['county'])
        $county    = htmlentities($_GET['county'], ENT_QUOTES);
    else
      $county = 'ANY';
      
    if ($_GET['city'])
        $city    = htmlentities($_GET['city'], ENT_QUOTES);
    else
      $city = 'ANY';
      
    
    if ($_GET['ZCODE'])
      $zcode = htmlentities($_GET['ZCODE'], ENT_QUOTES);
    else
      $zcode = 'ANY';
    
    if ($_GET['MAX'])
      $max = htmlentities($_GET['MAX'], ENT_QUOTES);
    else
      $max = 'B_MEDIAN';
    
    $dbSearch = new LISTSearch($smarty->connection);

    
    $smarty->assign('listingTable', $listings);
    $url = '/rental/visulate_search.php?REPORT_CODE=LISTINGS&qtype='.$qtype.'&state='.$state.'&county='.$county.'&city='.$city;

    if ($qtype=='LATEST')
     { 
      $commlist = $dbReport->getMLScommercial($county, $state); 
      $smarty->assign('commlist', $commlist);    
      $resultList = $dbReport->getMLSlatest($county, $state);      
      $pageDesc = $county.' Latest Listings';
     }
    elseif ($qtype=='COMMERCIAL')
     {
      $commlist = $dbReport->getMLScommercial($county, $state); 
      
      $zcodeFound = "N";
      foreach ($commlist as $zlist){
        if ($zlist["ZCODE"] == $zcode) $zcodeFound = "Y";
      }
      if ($zcodeFound == "N") $zcode = $commlist[0]["ZCODE"];

      $smarty->assign('commlist', $commlist);    
      $listings = $dbReport->getPriceRange($qtype, $county, $state);
      $values = getMaxMin($listings, $max, $zcode);
      $resultList = $dbReport->getPriceRangeListings($qtype, $zcode, $values["maxval"], $values["minval"], $county);
      if ($listings){
        $pageDesc = $listings[$zcode]["NAME"].' in '.$county
                              .' Priced from $'.number_format($values["minval"])
                              .' to $'.number_format($values["maxval"]);}
      else{
        $pageDesc = 'Commercial properties in '.$county
                              .' Priced from $'.number_format($values["minval"])
                              .' to $'.number_format($values["maxval"]);}
        
     }
    elseif ($qtype=='HOMEPAGE')
    {
     $commlist = $dbReport->getLatestCommercial();
     $smarty->assign('commlist', $commlist);
     $resultList = $dbReport->getLatestCommercial();
     $pageDesc = $county.' Latest Commercial Listings';
    
    }
    else
     {
      $ziplist = $dbReport->getMLSzipcodes($city, $county, $state);
      
      $zcodeFound = "N";
      foreach ($ziplist as $zlist){
        if ($zlist["ZCODE"] == $zcode) $zcodeFound = "Y";
        }
      if ($zcodeFound == "N") $zcode = $ziplist[0]["ZCODE"];
      

      $smarty->assign('ziplist', $ziplist);
      $listings = $dbReport->getPriceRange($qtype, $county, $state);
      $values = getMaxMin($listings, $max, $zcode);
      $resultList = $dbReport->getPriceRangeListings($qtype, $zcode, $values["maxval"], $values["minval"], $county);

      if ($qtype=='LAND')
       {$pageDesc = 'Vacant land';}
      else
       {$pageDesc = 'Residential Properties';}
       
      if ($listings){
      $pageDesc.=' in '.$listings[$zcode]["NAME"]
                .' Priced from $'.number_format($values["minval"])
                .' to $'.number_format($values["maxval"]);}
     }


      $searchList = $dbSearch->getCountyListings($qtype, $state);
      //print_r($searchList);
      $smarty->assign('locations', $searchList);


       $smarty->assign('max', $max);
       $smarty->assign('zcode', $zcode);
       $smarty->assign('resultList', $resultList);    
       $smarty->assign('url', $url);           
       $smarty->assign('qtype', $qtype);   

       $smarty->assign('city', $city);        
       $smarty->assign('county', $county);                           
              
       $smarty->assign("pageDesc", $pageDesc);                
      
     $html_report = $smarty->display($template_prefix."-ajax-listings.tpl"); 
   }

  function sales_request($smarty, $template_prefix, $dbReport)
  {
     if ($_GET['region_id'])
        $region_id    = htmlentities($_GET['region_id'], ENT_QUOTES);
     else
      $region_id = 0;

     $dbCity   = new RNTCities($smarty->connection);
     $regions = $dbCity->getRegions();
     $skey = get_skey($region_id, $regions);
     if ($skey == 0) $region_id = NULL;
     
     $submenu3 = get_region_submenu($regions);
     $smarty->assign("submenu2_1", $submenu3);
     $smarty->assign("skey", $skey);
     $smarty->assign("region_id", $region_id);
    

      if (htmlentities($_REQUEST["county"], ENT_QUOTES))
        $county = htmlentities($_REQUEST["county"], ENT_QUOTES);
      else
        $county = 'BREVARD';

     //$cityDataValues = $dbCity->getCityDesc("ANY", $county, "FL");
     //$smarty->assign("cityDataValues", $cityDataValues);

      $smarty->assign('getState', 'FL');
      $smarty->assign('getCounty', $county);

      $dbSearch = new LISTSearch($smarty->connection);
      $searchList = $dbSearch->getCountyCities($county, 'FL');
      $smarty->assign('locations', $searchList);
     
      if (htmlentities($_REQUEST["YEAR"], ENT_QUOTES))
      {
       $year = htmlentities($_REQUEST['YEAR']);
       $report_data = $dbReport->YearSales($year, $county);
       $smarty->assign("data", $report_data);
       $smarty->assign("pageTitle", ucfirst(strtolower($county))." County, Florida $year Property Sales");
       $smarty->assign("pageDesc", "Visulate sales data for all types of property in ".ucfirst(strtolower($county))." County Florida in $year");
       $smarty->assign("pageText",
       "This page shows property sales history for ".ucfirst(strtolower($county))." County Florida in $year
       It shows a breakdown of the number of properties sold, total sales volume and median price by city and month.
       The data is sourced from public records and is deemed reliable but not guaranteed.
       It may contain inaccuracies. Click on the city to see the details for individual sales in a month.");
       
       $html_report = $smarty->display($template_prefix."-year-details.tpl");
      }
      elseif (htmlentities($_REQUEST["MONTH_YEAR"], ENT_QUOTES))
      {
       $city = ucwords(strtolower(htmlentities($_REQUEST["CITY"], ENT_QUOTES)));
       $report_data = $dbReport->MonthSales(htmlentities($_REQUEST["MONTH_YEAR"], ENT_QUOTES)
                                          , htmlentities($_REQUEST["CITY"], ENT_QUOTES)
                                          , $county);
       $month_year = explode('-', htmlentities($_REQUEST["MONTH_YEAR"], ENT_QUOTES));
       $year = $month_year[1];
       $n_month = $month_year[0];
       if ($n_month == 01) $month = "January";
           elseif ($n_month == 02) $month = "February";
           elseif ($n_month == 03) $month = "March";
           elseif ($n_month == 04) $month = "April";
           elseif ($n_month == 05) $month = "May";
           elseif ($n_month == 06) $month = "June";
           elseif ($n_month == 07) $month = "July";
           elseif ($n_month == 08) $month = "August";
           elseif ($n_month == 09) $month = "September";
           elseif ($n_month == 10) $month = "October";
           elseif ($n_month == 11) $month = "November";
       else $month = "December";
     
       $smarty->assign("year", $year);
       $smarty->assign("month", $month);
       $smarty->assign("data", $report_data);
       $smarty->assign("pageTitle", ucfirst(strtolower($city)).", Florida Property Sales - $month $year");
       $smarty->assign("pageDesc", "Visulate sales data for all types of property in $city, Florida $month $year");
       $smarty->assign("pageText",
        "This page shows property sales history for ".ucfirst(strtolower($city)).", Flordia in $month $year.
         It shows the property address, sales date, and sales amount for Warranty Deeds recorded in $month $year.
         The data is sourced from public records is deemed reliable but not guaranteed. It may contain inaccuracies.
         Click on the address to see the property details.");
       $html_report = $smarty->display($template_prefix."-month-details.tpl");
      }
     else
      {
       $report_data = $dbReport->AllSales($county);
       $smarty->assign("allSales", $report_data);
       $smarty->assign("pageTitle", ucfirst(strtolower($county))." County, Florida Property Sales");
       $smarty->assign("pageDesc", "Sales data for all types of property in ".ucfirst(strtolower($county)).
       " County, Florida.
       Displays sales data recorded in the Visulate database and shows a breakdown by year of the
       number of properties sold, total sales volume and median price.");
       $smarty->assign("pageText",
       "This page shows sales data for all types of property in ".ucfirst(strtolower($county)).
       " County, Florida.  It shows a breakdown by year of the number of properties sold, total
       sales volume and median price.  Click on a year in the ".ucfirst(strtolower($county)).
       " County Sales History table for additional details");
       $html_report = $smarty->display($template_prefix."_city.tpl");
      }
    }

  function commercial_sales($smarty, $template_prefix, $dbReport)
  {

     if ($_GET['region_id'])
        $region_id    = htmlentities($_GET['region_id'], ENT_QUOTES);
     else
      $region_id = 0;

     $dbCity   = new RNTCities($smarty->connection);
     $regions = $dbCity->getRegions();
     $skey = get_skey($region_id, $regions);
     if ($skey == 0) $region_id = NULL;

     $submenu3 = get_region_submenu($regions);
     $smarty->assign("submenu2_1", $submenu3);
     $smarty->assign("skey", $skey);
     $smarty->assign("region_id", $region_id);
     
      if (htmlentities($_REQUEST["county"], ENT_QUOTES))
        $county = htmlentities($_REQUEST["county"], ENT_QUOTES);
      else
        $county = 'BREVARD';

        
        
      $smarty->assign('getState', 'FL');
      $smarty->assign('getCounty', $county);

      $dbSearch = new LISTSearch($smarty->connection);
      $searchList = $dbSearch->getCountyCities($county, 'FL');
      $smarty->assign('locations', $searchList);
  
      if (htmlentities($_REQUEST["YEAR"], ENT_QUOTES))
        {
         $year = htmlentities($_REQUEST["YEAR"], ENT_QUOTES);
         $report_data = $dbReport->CommercialSalesYear(htmlentities($_REQUEST["YEAR"], ENT_QUOTES), $county);
         $smarty->assign("data", $report_data);
         $smarty->assign("pageTitle", "$year Commercial Property Sales ".ucfirst(strtolower($county))." County, Florida");
         $smarty->assign("pageDesc", ucfirst(strtolower($county))." County, Florida Commercial Property Sales data for property sales in $year.");
         $smarty->assign("pageText",
         "This page shows commercial property sales data for ".ucfirst(strtolower($county))." County, Florida.
         It shows a breakdown by property type of ".ucfirst(strtolower($county))." commercial sales in $year. The data was sourced
         from public records and is deemed reliable but not guaranteed. It should be independently verified.
         Click on the property class to see a breakdown of individual sales.");
         
         $html_report = $smarty->display($template_prefix."-commercial-year.tpl");
         }
    elseif (htmlentities($_REQUEST["CLASS"], ENT_QUOTES) && htmlentities($_REQUEST["CYEAR"], ENT_QUOTES))
    {
     $year  = htmlentities($_REQUEST["CYEAR"], ENT_QUOTES);
     $display_class = $dbReport->getUcodeDesc(htmlentities($_REQUEST["CLASS"], ENT_QUOTES));
     $report_data = $dbReport->CommercialClassSales(htmlentities($_REQUEST["CLASS"], ENT_QUOTES)
                , htmlentities($_REQUEST["CYEAR"], ENT_QUOTES)
                , $county);
     $smarty->assign("data", $report_data);
     $smarty->assign("display_class", $display_class);
     $smarty->assign("pageTitle", ucfirst(strtolower($county))." County, Florida $display_class Property Sales Florida $year");
     $smarty->assign("pageDesc", "Location and sales data for  Florida $display_class property sales in $year.");
     $smarty->assign("cclass", "COMM");
     $smarty->assign("pageText",
     "This page shows location and sales data for ".ucfirst(strtolower($county))." County, Florida $display_class sales
     in $year. It displays sales data recorded in the Visulate database.
     The data was sourced from public records and is deemed reliable but not guaranteed.
     It should be independently verified. Click on a property address in the Sales Records table for additional details");
     
     $html_report = $smarty->display($template_prefix."-commercial-class.tpl");
    }
    else
     {
      $report_data = $dbReport->CommercialSales($county);
      $smarty->assign("commercialSummary", $report_data);
      $smarty->assign("pageTitle", "Commercial Property Sales ".ucfirst(strtolower($county))." County, Florida");
      $smarty->assign("pageDesc", "Commercial property sales data for ".ucfirst(strtolower($county))." County, Florida.
      Displays sales data recorded in the Visulate database and shows a breakdown by year of the
      number of properties sold, total sales volume and median price.");
      $smarty->assign("pageText",
      "This page shows commercial property sales data for ".ucfirst(strtolower($county))." County, Florida.
      It shows a breakdown by year of the  number of properties sold, total sales volume and median price.
      Click on a year in the ".ucfirst(strtolower($county))." Commercial Sales table for additional details");


      $html_report = $smarty->display($template_prefix."_city.tpl");
     }
   }

  function land_sales($smarty, $template_prefix, $dbReport)
  {

     if ($_GET['region_id'])
        $region_id    = htmlentities($_GET['region_id'], ENT_QUOTES);
     else
      $region_id = 0;

     $dbCity   = new RNTCities($smarty->connection);
     $regions = $dbCity->getRegions();
     $skey = get_skey($region_id, $regions);
     if ($skey == 0) $region_id = NULL;

     $submenu3 = get_region_submenu($regions);
     $smarty->assign("submenu2_1", $submenu3);
     $smarty->assign("skey", $skey);
     $smarty->assign("region_id", $region_id);

      if (htmlentities($_REQUEST["county"], ENT_QUOTES))
        $county = htmlentities($_REQUEST["county"], ENT_QUOTES);
      else
        $county = 'BREVARD';

      $smarty->assign('getState', 'FL');
      $smarty->assign('getCounty', $county);

      $dbSearch = new LISTSearch($smarty->connection);
      $searchList = $dbSearch->getCountyCities($county, 'FL');
      $smarty->assign('locations', $searchList);
 
  
    if (htmlentities($_REQUEST["YEAR"], ENT_QUOTES))
    {
     $year = htmlentities($_REQUEST["YEAR"], ENT_QUOTES);
     $report_data = $dbReport->LandSalesYear(htmlentities($_REQUEST["YEAR"], ENT_QUOTES), $county);
     $smarty->assign("data", $report_data);
     $smarty->assign("pageTitle", "$year Land Sales ".ucfirst(strtolower($county))." County, Florida");
     $smarty->assign("pageDesc", "Land Sales data for property sales in $year.");
     $smarty->assign("pageText",
     "This page shows land sales data for ".ucfirst(strtolower($county)).
     " County, Florida. It displays sales data recorded in the
     Visulate database and shows a breakdown by usage type of in $year
     The data was sourced from public records and is deemed reliable but not guaranteed.
     It should be independently verified. Click on the property class to see a breakdown of individual sales.");
     
     $html_report = $smarty->display($template_prefix."-land-year.tpl");
    }
    elseif (htmlentities($_REQUEST["CLASS"], ENT_QUOTES)
         && htmlentities($_REQUEST["CYEAR"], ENT_QUOTES))
    {
     $year  = htmlentities($_REQUEST["CYEAR"], ENT_QUOTES);
     $display_class = $dbReport->getUcodeDesc(htmlentities($_REQUEST["CLASS"], ENT_QUOTES));
     $report_data = $dbReport->CommercialClassSales(htmlentities($_REQUEST["CLASS"], ENT_QUOTES)
                                                  , htmlentities($_REQUEST["CYEAR"], ENT_QUOTES)
                                                  , $county);
     $smarty->assign("data", $report_data);
     $smarty->assign("display_class", $display_class);
     $smarty->assign("pageTitle", "$display_class Land Sales in $year for ".ucfirst(strtolower($county))." County, Florida");
     $smarty->assign("pageDesc", "Location and sales data for $display_class land sales in $year for "
     .ucfirst(strtolower($county))." County, Florida");
     $smarty->assign("pageText",
     "This page shows land sales data for $display_class land in ".ucfirst(strtolower($county)).
     " County, Florida. It displays data recorded in the Visulate database for sales in $year
     The data was sourced from public records and is deemed reliable but not guaranteed.
     It should be independently verified. Click on an address in the Sales Records table for additional details.");
 
     $smarty->assign("lclass", "LAND");
     $html_report = $smarty->display($template_prefix."-commercial-class.tpl");
    }
    else
    {
      $report_data = $dbReport->LandSales($county);
      $smarty->assign("landSales", $report_data);
      $smarty->assign("pageTitle", "Land Sales ".ucfirst(strtolower($county))." County, Florida");
      $smarty->assign("pageDesc",
      "Land sales data for ".ucfirst(strtolower($county))." County, Florida. Displays sales data recorded in the Visulate database and
      shows a breakdown by year of the number of properties sold, total sales volume and median price.");
      $smarty->assign("pageText",
      "This page shows land sales data for ".ucfirst(strtolower($county))." County, Florida.
      It displays sales data recorded in the Visulate database and
      shows a breakdown by year of the number of properties sold, total sales volume and median price.
      Click on a year in the ".ucfirst(strtolower($county))." Land Sales table for additional details");
      $html_report = $smarty->display($template_prefix."_city.tpl");
     }
  }

  function display_property($smarty, $template_prefix, $dbReport)
  {
    $is_editor = $smarty->user->isBuyer();
    $prop_id = htmlentities($_REQUEST["PROP_ID"], ENT_QUOTES);
    $href = $GLOBALS["PATH_FORM_ROOT"]."visulate_search.php?REPORT_CODE=PROPERTY_DETAILS&PROP_ID=$prop_id";

     $submenu3 = array(array("href" => $href, "value"=>"Property"),
                     array("href" => $href."&MODE=cashflow", "value" => "Cashflow Estimate") );
    
         $type = (htmlentities($_REQUEST["MODE"], ENT_QUOTES));
         if ($type != "" && $type != "cashflow")
             $type = "";

         if ($type == ""){
                $skey = 0;
        $photos = $dbReport->getPropPhotos($prop_id);
        $smarty->assign("photos", $photos);
               }
        else if ($type == "cashflow"){
                    $skey = 1;
                    }
        else
            echo "error";
    
     $report_data = $dbReport->getPropertyDetails($prop_id);
     if (!($photos))
      {
       $streetview = $dbReport->get_streetview_url($report_data["PROPERTY"]["LAT"], $report_data["PROPERTY"]["LON"]);
       //print $streetview;
       $smarty->assign("streetview", $streetview);
      }
/*
     if ((strlen($report_data["PROPERTY"]["LAT"]) > 0) &&
         (strlen($report_data["PROPERTY"]["LON"]) > 0) && (MAINTENANCE_MODE != "Y") &&
         ($report_data["PROPERTY"]["ADDRESS1"] != "1600 Pennsylvania Avenue NW"))
      {

        $dbCity   = new RNTCities($smarty->connection);
        $city = $dbCity->getGeoCity($report_data["PROPERTY"]["LAT"], $report_data["PROPERTY"]["LON"], $report_data["PROPERTY"]["CITY"]);
        $smarty->assign("cityDataValues", $city);
      }
*/
     
     $canonical = 'property/'.$prop_id;
    
     if ($report_data["PROPERTY"]["ADDRESS1"] == "1600 Pennsylvania Avenue NW")
       {
         http_response_code(404);
         $photos = array();
         $photos[1] = array("URL"      => 'http://www.whitehouse.gov/sites/default/files/image/whitehouse_historypg.jpg'
                           ,"FILENAME" => 'whitehouse_historypg.jpg');
         $smarty->assign("photos", $photos);
       }
      //header("HTTP/1.0 404 Not Found");
     $ucode = 90001;
     foreach ($report_data["PROPERTY_USAGE"] as $k => $v)
       {
       $ucode = $k;
       $usage = $v;
       }

     if ($report_data["PROPERTY"]["PUMA"])
       {
       $dbSearch = new LISTSearch($smarty->connection);
       $puma = $dbSearch->getPumaSummary($report_data["PROPERTY"]["PUMA"]);
       $smarty->assign("puma", $puma);
       }
       //print_r($report_data);
     $comps       = $dbReport->getSimilar($prop_id);
     $mls         = $dbReport->getMLS($prop_id);
     $mls_listings = $dbReport->getSimilarMLS($prop_id);
    
     $default_values = $dbReport->getDefaults($prop_id, $ucode);
     $lease_type = $dbReport->getLeaseType($prop_id);
     $pclass     = $default_values["A"]["PCLASS"];
    
    
     foreach ($default_values as $k => $v){
        if ($lease_type == 'Triple Net')
          {
          $default_values[$k]["INSURANCE"]
            = $default_values[$k]["INSURANCE"] * $default_values[$k]["VACANCY_PERCENT"]/100;
          $default_values[$k]["MAINTENANCE"]
            = $default_values[$k]["MAINTENANCE"] * $default_values[$k]["VACANCY_PERCENT"]/100;;
          $default_values[$k]["UTILITIES"]
            = $default_values[$k]["UTILITIES"] * $default_values[$k]["VACANCY_PERCENT"]/100;;
          $default_values[$k]["TAX"]
            = $default_values[$k]["TAX"] * $default_values[$k]["VACANCY_PERCENT"]/100;;
          }
    
    $default_values[$k]["NOI"] = round(($default_values[$k]["ANNUAL_RENT"] - $default_values[$k]["VACANCY_AMOUNT"]
                           - $default_values[$k]["INSURANCE"] - $default_values[$k]["MAINTENANCE"]
                           - $default_values[$k]["UTILITIES"]
                           - $default_values[$k]["TAX"] - $default_values[$k]["MGT_AMOUNT"]));
    $default_values[$k]["VALUE"] = round($default_values[$k]["NOI"] / $default_values[$k]["CAP_RATE"] * 100);
    $default_values[$k]["DOWN"] = round($default_values[$k]["VALUE"] * 25/100);
    $default_values[$k]["LOAN"] = round($default_values[$k]["VALUE"] * 75/100);
    $default_values[$k]["COSTS"] = round($default_values[$k]["VALUE"] * 4/100);
  }
    if ($is_editor)
     {
       require_once dirname(__FILE__)."/classes/database/rnt_business_units.class.php";

       $smarty->user->set_database_user();
       $dbBU   = new RNTBusinessUnit($smarty->connection);
       $buList = $dbBU->getBusinessUnitByRole('BUYER');
           
       $smarty->assign("buList", $buList);
     }

     //$display_property = $dbReport->getPropDesc($prop_id);
     $display_property = $report_data["PROPERTY"]["ADDRESS1"].", ".$report_data["PROPERTY"]["CITY"]
     .", ".$report_data["PROPERTY"]["STATE"];
     //$prop_desc = $dbReport->getPropSummary($prop_id);
     //print_r($report_data);

    if ($report_data["PROPERTY"]["ADDRESS1"] == "1600 Pennsylvania Avenue NW")
      $prop_desc = "404 Not Found";
    elseif ($skey == 1)
    {$display_property = $display_property." Investment Analysis";
     $prop_desc =  "Interactive worksheet for ".$report_data["PROPERTY"]["ADDRESS1"]
     .".  Estimate its net operating income, unleveraged yield, finance costs, cashflow and cash on cash return."
     ." Download a spreadsheet to estimate a 5 year IRR.";
    }
    elseif ($default_values[$pclass]["VALUE"] == 0)
    {$prop_desc = "Address: ".$report_data["PROPERTY"]["ADDRESS1"]
                 .", Acreage: ".number_format($report_data["PROPERTY"]["ACREAGE"], 2)
                 .", Latitude: ".number_format($report_data["PROPERTY"]["LAT"], 2)
                 .", Longitude: ".number_format($report_data["PROPERTY"]["LON"], 2);
    }
    elseif  ($lease_type == 'Triple Net' && ($report_data["PROPERTY"]["SQ_FT"] > 0))
    { $prop_desc =  $report_data["PROPERTY"]["ADDRESS1"]." is a ". number_format($report_data["PROPERTY"]["SQ_FT"])." sq ft ".$usage
              .". We estimate it will lease for $".number_format($default_values[$pclass]["ANNUAL_RENT"]/$report_data["PROPERTY"]["SQ_FT"])
              ."/ft and have an NOI of $".number_format($default_values[$pclass]["NOI"])
              ."/year giving it an income Value of $". number_format($default_values[$pclass]["VALUE"])
              .". Its market value in ".$default_values[$pclass]["YEAR"]
              ." was $".number_format($default_values[$pclass]["MEDIAN_MARKET_VALUE"]);
    }
    else
    { $prop_desc =  $report_data["PROPERTY"]["ADDRESS1"]." is a ". number_format($report_data["PROPERTY"]["SQ_FT"])." sq ft ".$usage
              .". We estimate it would rent for $".number_format($default_values[$pclass]["MONTHLY_RENT"])
              ."/month giving it a net operating income of $".number_format($default_values[$pclass]["NOI"])
              ."/year. Applying a cap rate of ".number_format($default_values[$pclass]["CAP_RATE"])
              ."% would result in an income value of $". number_format($default_values[$pclass]["VALUE"])
              .". Its market value in ".$default_values[$pclass]["YEAR"] 
              ." was $".number_format($default_values[$pclass]["MEDIAN_MARKET_VALUE"]);
    }


    $smarty->assign("isEditor", $is_editor);
    $smarty->assign("defaults", $default_values);
    $smarty->assign("p_class", $pclass);
    $smarty->assign("pvalues", $default_values[$pclass]);

    $smarty->assign("data", $report_data);
    $smarty->assign("lease_type", $lease_type);
    $smarty->assign("pageTitle", "$display_property - Visulate");
    $smarty->assign("pageDesc", "$prop_desc");
    $smarty->assign("canonical", $canonical);
    $smarty->assign("comps", $comps);
    $smarty->assign("mls_listings", $mls_listings);
    $smarty->assign("mls", $mls);

    $smarty->assign("submenu2_1", $submenu3);
    $smarty->assign("skey", $skey);
           
    $html_report = $smarty->display($template_prefix."-property-details.tpl");
  }
  
  function display_owner($smarty, $template_prefix, $dbReport)
  { 
     $display_owner = htmlentities($_REQUEST["OWNER_ID"], ENT_QUOTES);
     $report_data = $dbReport->getOwnerDetails(htmlentities($_REQUEST["OWNER_ID"], ENT_QUOTES));
     $smarty->assign("data", $report_data);
     $smarty->assign("pageTitle", "Property Owner Details: $display_owner");
     $smarty->assign("pageDesc", "Property owner details as recorded in tax records.");
     $html_report = $smarty->display($template_prefix."-owner-details.tpl"); 
   }

  function find_agent($smarty, $template_prefix, $dbReport)
  {
     $license = htmlentities($_REQUEST["LICENSE"], ENT_QUOTES);
     if ($license)
       {
        $report_data = $dbReport->getAgent($license);
        $smarty->assign("agent", $report_data);
        
        if ($report_data["LICENSE_TYPE"]=='CQ RE Corp.'){
         $smarty->assign("pageTitle", "Florida Real Estate Office: ".$report_data["NAME"]);
         $smarty->assign("pageDesc", $report_data["FIRST_NAME"]." ".$report_data["LAST_NAME"]." is a real estate office in ".$report_data["CITY"]
                        .", ".$report_data["STATE"]);
         }
         else{
         $smarty->assign("pageTitle", "Florida Real Estate Professional: ".$report_data["NAME"]);
         $smarty->assign("pageDesc", $report_data["FIRST_NAME"]." ".$report_data["LAST_NAME"]." is a real estate professional based in ".$report_data["CITY"]
                        .", ".$report_data["STATE"]);
         }
       }
     else
       {
        $zipcode = htmlentities($_REQUEST["ZIPCODE"], ENT_QUOTES);
        if (! is_numeric($zipcode)) $zipcode = 32952;
        $zipdata = $dbReport->getZipcodeData($zipcode);
        $report_data = $dbReport->getCourses($zipcode);
        $smarty->assign("data", $report_data);
        $smarty->assign("zipcode", $zipcode);
        $smarty->assign("zipdata", $zipdata);
     
        $course = htmlentities($_REQUEST["COURSE"], ENT_QUOTES);
        if ($course)
          {
           $report_data = $dbReport->getAgentList($zipcode, $course);
           $smarty->assign("agentdata", $report_data);
          }

        $smarty->assign("pageTitle", "Find Real Estate Professionals by Training Course for Zipcode $zipcode");
        $smarty->assign("pageDesc", "List of training courses attended by real estate professionals in zipcode $zipcode");
       }
     $html_report = $smarty->display($template_prefix."-agent-zipcode.tpl");
   }

  function display_corp($smarty, $template_prefix, $dbReport)
  { 
     $is_editor = $smarty->user->isAdmin() || $smarty->user->isSiteEditor();
     
     // Convert CORP_ID to corp_id for Bing
     if (htmlentities($_REQUEST["corp_id"], ENT_QUOTES))
       $corp_id = strtoupper(htmlentities($_REQUEST["corp_id"], ENT_QUOTES));
     else
       $corp_id = htmlentities($_REQUEST["CORP_ID"], ENT_QUOTES);
     
     $report_data = $dbReport->getCorpDetails($corp_id);
     $canonical = 'rental/visulate_search.php?CORP_ID='.$corp_id;
     
     if (empty($report_data))
     {
      http_response_code(404);
      //exit;
       // header("HTTP/1.0 404 Not Found");
     }
     
     /* Infoconnect API did not find many companies
     $corpName = urlencode($report_data["SUNBIZ-ID"]["NAME"]);
     $url = "https://api.infoconnect.com/v1/companies?apikey=ZoDlJsmASDeH0acSGAOeXffW8oUpvohn&companyname=".$corpName."&stateprovince=FL";
     $response = htp_get($url);
     $infoconnect = json_decode($response, true);
    // print_r($infoconnect);

     $smarty->assign("infoconnect", $infoconnect);
     */
     


     
     if ($is_editor)
     {
     
        $sunbiz = new PRSunbiz($smarty->connection);
     
        if (!defined("ADMIN_MENUS")) {
        define("ACTION_VIEW", "VIEW");
        define("ACTION_INSERT", "INSERT");
        define("ACTION_UPDATE", "UPDATE");
        define("ACTION_DELETE", "DELETE");
        define("ACTION_CANCEL", "CANCEL");
        }

        // check user action
        $action = ACTION_VIEW;
        if ($_REQUEST["action_cancel"]) {
            $action = ACTION_CANCEL;
        }
        elseif ($_REQUEST["action_save"]) {
            $action = ACTION_UPDATE;
        }
        elseif ($_REQUEST["action_add"]) {
            $action = ACTION_INSERT;
        }
        elseif ($_REQUEST["action"] == "DEL_OFFICER") {
           $action = ACTION_DELETE;
        }
        else {
         $action = ACTION_VIEW;
       }



          // create form
       $form   = new HTML_QuickForm('visulate_search', 'GET');
       $IsPost = $form->isSubmitted();
            



       if ($action == ACTION_CANCEL)
        {
        print "<script>top.location = '".$GLOBALS["PATH_FORM_ROOT"]."visulate_search.php?CORP_ID=".$corp_id."';</script>";
        exit;
        }
        elseif ($action == ACTION_UPDATE)
        {

         $corpID      = htmlentities($_REQUEST["CORP_ID"], ENT_QUOTES);
         $name        = htmlentities($_REQUEST["NAME"], ENT_QUOTES);
         $status      = htmlentities($_REQUEST["STATUS"], ENT_QUOTES);
         $filing_type = htmlentities($_REQUEST["FILING_TYPE"], ENT_QUOTES);
         $filing_date = htmlentities($_REQUEST["FILING_DATE"], ENT_QUOTES);
         $fei_number  = htmlentities($_REQUEST["FEI_NUMBER"], ENT_QUOTES);
         $address1    = htmlentities($_REQUEST["ADDRESS1"], ENT_QUOTES);
         $address2    = htmlentities($_REQUEST["ADDRESS2"], ENT_QUOTES);
         $city        = htmlentities($_REQUEST["CITY"], ENT_QUOTES);
         $state       = htmlentities($_REQUEST["STATE"], ENT_QUOTES);
         $zipcode     = htmlentities($_REQUEST["ZIPCODE"], ENT_QUOTES);
         $prop_id     = htmlentities($_REQUEST["CPROP_ID"], ENT_QUOTES);
         $lat         = htmlentities($_REQUEST["LAT"], ENT_QUOTES);
         $lon         = htmlentities($_REQUEST["LON"], ENT_QUOTES);
         
         $msg = '';
         if ($name == NULL) $msg = "<br/>Name cannot be null";
         if ($filing_type == NULL) $msg = $msg."<br/>Filing Type cannot be null";
         if ($filing_date == NULL) $msg = $msg."<br/>Filing Date cannot be null";
         if ($address1 == NULL) $msg = $msg."<br/>Address1 cannot be null";
         if ($city == NULL) $msg = $msg."<br/>City cannot be null";
         if ($state == NULL) $msg = $msg."<br/>State cannot be null";
         if ($zipcode == NULL) $msg = $msg."<br/>Zipcode cannot be null";
         if (strlen($zipcode) != 5) $msg = $msg."<br/>Zipcode must be 5 digits";
     
         if (!$msg)
         {
           $IsError = 0;
           try {
               $sunbiz->update_corp($corpID, $name, $status, $filing_type, $filing_date, $fei_number);
               $sunbiz->update_corp_addr($corpID, $address1, $address2, $city, $state, $zipcode, $prop_id, $lat, $lon);
                     
               $smarty->connection->commit();
               }
           catch(SQLException $e) 
           {
           //print_r($e);
           $IsError = 1;
           $msg = $msg."<br/>A database error occurred";
           $smarty->connection->rollback();
           } 
         }
         else
         {
           $IsError = 1;
         } 
           
           
         if ($IsError)
           {
            $smarty->assign("errorMsg2", "<fieldset><legend>Update Failed</legend>
            <p class='error'> $msg</p></fieldset>");
           }
         else
          {
           print "<script>top.location = '".$GLOBALS["PATH_FORM_ROOT"]."visulate_search.php?CORP_ID=".$corp_id."';</script>";
           exit;
           }
        }
        elseif ($action == ACTION_INSERT)
        {
        
         $corpID     = htmlentities($_REQUEST["CORP_ID"], ENT_QUOTES);
         $name       = htmlentities($_REQUEST["ONAME"], ENT_QUOTES);
         $type       = htmlentities($_REQUEST["OTYPE"], ENT_QUOTES);
         $title_code = htmlentities($_REQUEST["OPOSITION"], ENT_QUOTES);
         $address1   = htmlentities($_REQUEST["OADDRESS1"], ENT_QUOTES);
         $address2   = htmlentities($_REQUEST["OADDRESS2"], ENT_QUOTES);
         $city       = htmlentities($_REQUEST["OCITY"], ENT_QUOTES);
         $state      = htmlentities($_REQUEST["OSTATE"], ENT_QUOTES);
         $zipcode    = htmlentities($_REQUEST["OZIPCODE"], ENT_QUOTES);
         $msg = '';
         if ($name == NULL) $msg = "<br/>Name cannot be null";
         if ($title_code == NULL) $msg = $msg."<br/>Position cannot be null";
         if ($address1 == NULL) $msg = $msg."<br/>Address1 cannot be null";
         if ($city == NULL) $msg = $msg."<br/>City cannot be null";
         if ($state == NULL) $msg = $msg."<br/>State cannot be null";
         if ($zipcode == NULL) $msg = $msg."<br/>zipcode cannot be null";
     
         if (!$msg)
         {
           $IsError = 0;
           try {
               $sunbiz->add_officer($corpID, $name, $type, $title_code, $address1, $address2, $city, $state, $zipcode);
               $smarty->connection->commit();
               }
           catch(SQLException $e) 
           {
           $IsError = 1;
           $msg = $msg."<br/>A database error occurred";
           $smarty->connection->rollback();
           } 
         }
         else
         {
           $IsError = 1;
         } 
           
           
         if ($IsError)
           {
            $smarty->assign("errorMsg", "<fieldset><legend>Insert of New Officer Failed</legend>
            <p class='error'> $msg</p></fieldset>");
           }
         else
          {
           print "<script>top.location = '".$GLOBALS["PATH_FORM_ROOT"]."visulate_search.php?CORP_ID=".$corp_id."';</script>";
           exit;
           }
         
    
        }
        elseif ($action == ACTION_DELETE)
        {
         $sunbiz->rm_officer($corp_id,  htmlentities($_REQUEST["PN_ID"], ENT_QUOTES), NULL);
         print "<script>top.location = '".$GLOBALS["PATH_FORM_ROOT"]."visulate_search.php?CORP_ID=".$corp_id."';</script>";
         exit;
        }

       

       $form_data = array();
       // form actions buttons
       $form->AddElement("submit", "action_cancel", "Cancel", array());
       $form->AddElement("submit", "action_save",   "Save",   array());
       $form->AddElement("submit", "action_add",   "Add Officer",   array());
       
       
       
       $form->AddElement("hidden", "CORP_ID", $corp_id);
       $form->AddElement("text", "NAME", "Name", array("size"=> 40));
       $form->AddElement("select", "STATUS", "Status", array("A"=>"Active","I"=>"Inactive","H"=>"Hidden"));
       $form->AddElement("text", "FILING_TYPE", "Filing Type", array("size"=> 40));
       $form->AddElement("text", "FILING_DATE", "Filing Date", array("size"=> 40));
       $form->AddElement("text", "FEI_NUMBER",  "FEI Number", array("size"=> 40));
       
       $form->AddElement("text", "ADDRESS1",  "Address 1", array("size"=> 40));
       $form->AddElement("text", "ADDRESS2",  "Address 2", array("size"=> 40));
       $form->AddElement("text", "CITY",  "City", array("size"=> 40));
       $form->AddElement("text", "STATE",  "State", array("size"=> 2));
       $form->AddElement("text", "ZIPCODE",  "Zipcode", array("size"=> 6));
       $form->AddElement("text", "CPROP_ID",  "Prop ID", array("size"=> 10));
       $form->AddElement("text", "LAT",  "Latitude", array("size"=> 20));
       $form->AddElement("text", "LON",  "Longitude", array("size"=> 20));
       
       $form->AddElement("text", "ONAME",  "Name", array("size"=> 40));
       $form->AddElement("select", "OTYPE",  "Officer Type",  array("P"=>"Person","C"=>"Company"));
       $form->AddElement("text", "OPOSITION",  "Position", array("size"=> 6));
       $form->AddElement("text", "OADDRESS1",  "Address 1", array("size"=> 40));
       $form->AddElement("text", "OADDRESS2",  "Address 2", array("size"=> 40));
       $form->AddElement("text", "OCITY",  "City", array("size"=> 40));
       $form->AddElement("text", "OSTATE",  "State", array("size"=> 2));
       $form->AddElement("text", "OZIPCODE",  "Zipcode", array("size"=> 6));     



// if (!$IsPost)
 //{
     $form->setDefaults(
         array(
             "NAME"         => $report_data["SUNBIZ-ID"]["NAME"],
             "STATUS"       => $report_data["SUNBIZ-ID"]["STATUS"],
             "FILING_TYPE"  => $report_data["SUNBIZ-ID"]["FILING_TYPE"],
             "FILING_DATE"  => $report_data["SUNBIZ-ID"]["FILING_DATE"],
             "FEI_NUMBER"   => $report_data["SUNBIZ-ID"]["FEI_NUMBER"],
              
             "ADDRESS1"   => $report_data["SUNBIZ-ID"]["ADDR"]["ADDRESS1"],
             "ADDRESS2"   => $report_data["SUNBIZ-ID"]["ADDR"]["ADDRESS2"],
             "CITY"       => $report_data["SUNBIZ-ID"]["ADDR"]["CITY"],
             "STATE"      => $report_data["SUNBIZ-ID"]["ADDR"]["STATE"],
             "ZIPCODE"    => $report_data["SUNBIZ-ID"]["ADDR"]["ZIPCODE"],
             "CPROP_ID"   => $report_data["SUNBIZ-ID"]["ADDR"]["PROP_ID"],
             "LAT"        => $report_data["SUNBIZ-ID"]["ADDR"]["LAT"],
             "LON"        => $report_data["SUNBIZ-ID"]["ADDR"]["LON"],
             "GEO_FOUND"  => $report_data["SUNBIZ-ID"]["ADDR"]["GEO_FOUND"]
             
         )
    );
   // }

       $renderer = new HTML_QuickForm_Renderer_ArraySmarty($tpl);
       // generate code
       $form->accept($renderer);

       $smarty->assign('form_data', $renderer->toArray());
       $smarty->assign('action', $action);
     
      }

//print_r($report_data);

     $lat =  $report_data["SUNBIZ-ID"]["ADDR"]["LAT"];
     $long = $report_data["SUNBIZ-ID"]["ADDR"]["LON"];


     $mls_listings = $dbReport->getGeoListings( $report_data["SUNBIZ-ID"]["ADDR"]["LAT"]
                                              , $report_data["SUNBIZ-ID"]["ADDR"]["LON"]);
     if (($lat)&&($long)){
     $streetview = $dbReport->get_streetview_url($lat, $long);
     $smarty->assign("streetview", $streetview);
     }
                                              
/*
     if ((strlen($report_data["SUNBIZ-ID"]["ADDR"]["LAT"]) > 0) &&
         (strlen($report_data["SUNBIZ-ID"]["ADDR"]["LON"]) > 0) && (MAINTENANCE_MODE != "Y"))
      {

        $dbCity   = new RNTCities($smarty->connection);
        $city = $dbCity->getGeoCity($report_data["SUNBIZ-ID"]["ADDR"]["LAT"]
                                  , $report_data["SUNBIZ-ID"]["ADDR"]["LON"]
                                  , $report_data["SUNBIZ-ID"]["ADDR"]["CITY"]);
        $smarty->assign("cityDataValues", $city);
      }
*/
     $smarty->assign("is_editor", $is_editor);
     $smarty->assign("canonical", $canonical);
     $smarty->assign("data", $report_data);
     $smarty->assign("mls_listings", $mls_listings);
     $smarty->assign("pageTitle", $report_data["SUNBIZ-ID"]["NAME"]." Corporate Details");
     $smarty->assign("pageDesc", $report_data["SUNBIZ-ID"]["NAME"]." is a Florida Corporation based in ".$report_data["SUNBIZ-ID"]["ADDR"]["CITY"]);
     $html_report = $smarty->display($template_prefix."-corp-details.tpl"); 
    
   }

  function htp_get($path)
  {
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL,$path);
        curl_setopt($ch, CURLOPT_FAILONERROR,1);
        curl_setopt($ch, CURLOPT_FOLLOWLOCATION,1);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);
        curl_setopt($ch, CURLOPT_TIMEOUT, 15);
        $retValue = curl_exec($ch);
        curl_close($ch);
        return $retValue;
  }

  function save2BU($smarty)
  {
     $form = new HTML_QuickForm('Save2BU', 'POST');
     $post_values = $form->getSubmitValues();
     $values = array();
     
     $values["PROP_ID"]         = htmlentities($post_values["PROP_ID"], ENT_QUOTES);
     $values["BUSINESS_ID"]     = htmlentities($post_values["BUSINESS_ID"], ENT_QUOTES);
     $values["ESTIMATE_TITLE"]  = htmlentities($post_values["ESTIMATE_TITLE"], ENT_QUOTES);
     $values["MONTHLY_RENT"]    = htmlentities(str_replace(",", "",$post_values["MONTHLY_RENT"]), ENT_QUOTES);
     $values["OTHER_INCOME"]    = htmlentities(str_replace(",", "",$post_values["OTHER_INCOME"]), ENT_QUOTES);
     $values["VACANCY_PCT"]     = htmlentities(str_replace(",", "",$post_values["VACANCY_PCT"]), ENT_QUOTES);
     $values["REPLACE_3YEARS"]  = htmlentities(str_replace(",", "",$post_values["REPLACE_3YEARS"]), ENT_QUOTES);
     $values["REPLACE_5YEARS"]  = htmlentities(str_replace(",", "",$post_values["REPLACE_5YEARS"]), ENT_QUOTES);
     $values["REPLACE_12YEARS"] = htmlentities(str_replace(",", "",$post_values["REPLACE_12YEARS"]), ENT_QUOTES);
     $values["MAINTENANCE"]     = htmlentities(str_replace(",", "",$post_values["MAINTENANCE"]), ENT_QUOTES);
     $values["UTILITIES"]       = htmlentities(str_replace(",", "",$post_values["UTILITIES"]), ENT_QUOTES);
     $values["PROPERTY_TAXES"]  = htmlentities(str_replace(",", "",$post_values["PROPERTY_TAXES"]), ENT_QUOTES);
     $values["INSURANCE"]       = htmlentities(str_replace(",", "",$post_values["INSURANCE"]), ENT_QUOTES);
     $values["MGT_FEES"]        = htmlentities(str_replace(",", "",$post_values["MGT_FEES"]), ENT_QUOTES);
     $values["DOWN_PAYMENT"]    = htmlentities(str_replace(",", "",$post_values["DOWN_PAYMENT"]), ENT_QUOTES);
     $values["CLOSING_COSTS"]   = htmlentities(str_replace(",", "",$post_values["CLOSING_COSTS"]), ENT_QUOTES);
     $values["PURCHASE_PRICE"]  = htmlentities(str_replace(",", "",$post_values["PURCHASE_PRICE"]), ENT_QUOTES);
     $values["CAP_RATE"]        = htmlentities(str_replace(",", "",$post_values["CAP_RATE"]), ENT_QUOTES);
     $values["LOAN1_AMOUNT"]    = htmlentities(str_replace(",", "",$post_values["LOAN1_AMOUNT"]), ENT_QUOTES);
     $values["LOAN1_TYPE"]      = htmlentities(str_replace(",", "",$post_values["LOAN1_TYPE"]), ENT_QUOTES);
     $values["LOAN1_TERM"]      = htmlentities(str_replace(",", "",$post_values["LOAN1_TERM"]), ENT_QUOTES);
     $values["LOAN1_RATE"]      = htmlentities(str_replace(",", "",$post_values["LOAN1_RATE"]), ENT_QUOTES);
     $values["LOAN2_AMOUNT"]    = htmlentities(str_replace(",", "",$post_values["LOAN2_AMOUNT"]), ENT_QUOTES);
     $values["LOAN2_TYPE"]      = htmlentities(str_replace(",", "",$post_values["LOAN2_TYPE"]), ENT_QUOTES);
     $values["LOAN2_TERM"]      = htmlentities(str_replace(",", "",$post_values["LOAN2_TERM"]), ENT_QUOTES);
     $values["LOAN2_RATE"]      = htmlentities(str_replace(",", "",$post_values["LOAN2_RATE"]), ENT_QUOTES);
 
     $is_editor = $smarty->user->isBuyer();
     if ($is_editor)
       {
        require_once dirname(__FILE__)."/classes/database/rnt_business_units.class.php";
        require_once dirname(__FILE__)."/classes/database/rnt_estimate.class.php";
          
        $smarty->user->set_database_user();
        $dbBU        = new RNTBusinessUnit($smarty->connection);
        $buList      = $dbBU->getBusinessUnitByRole('BUYER');
        $hasAccess = false;
        foreach ($buList as $k => $v)
          {
          if ($buList[$k]["BUSINESS_ID"] == $values["BUSINESS_ID"])
            $hasAccess = true;
          }
        if ($hasAccess)
          {
           $dbEstimate = new RNTEstimate($smarty->connection);
           $return_code = $dbEstimate->save2BU($values);
           if ($return_code == '1') $message = 'Saved property to business unit';
           elseif ($return_code == '2') $message = 'Updated existing estimate in business unit';
           elseif ($return_code == '10') $message = 'Added estimate to existing property in business unit';
           elseif ($return_code == '11') $message = 'Saved property and estimate to business unit';
           else $message = '<span class="error"> Save failed.  A database error occurred</span>';
           }
        else
          {$message = '<span class="error"> Save failed.  You do not have access to the selected business unit</span>';}
         }
      else
         {$message = '<span class="error"> Save failed.  You are not logged in with a role of buyer</span>';}

     $smarty->assign("skey", "1");
     $smarty->assign("save2BUmsg", $message);
    }

  function process_search($smarty, $template_prefix)
  {
           if ($_POST["ADDRESS1"])
            {
             $smarty->assign("PrmAddress1", $_POST["ADDRESS1"]);
             $smarty->assign("PrmCity", $_POST["CITY"]);
             $smarty->assign("PrmAddr", $_POST["ADDR"]);

             $report_data = $dbReport->getProperty( $_POST["ADDRESS1"], $_POST["CITY"]);
             $report_file = "owner-list";
             $smarty->assign("data", $report_data);
             }
            elseif (($_POST["LAT"])&&($_POST["LON"]))
             {
              $lat  = htmlentities($_POST["LAT"], ENT_QUOTES);
              $long = htmlentities($_POST["LON"], ENT_QUOTES);
              
             }
             elseif (($_GET["lat"])&&($_GET["lon"])){
                 $lat  = htmlentities($_GET["lat"], ENT_QUOTES, 'UTF-8');
                 $long = htmlentities($_GET["lon"], ENT_QUOTES, 'UTF-8');
               }
            else
             {
              if ($_GET['q']){
                 $addr    = htmlentities($_GET['q'], ENT_QUOTES);}
              else{
                 $addr = htmlentities($_POST["ADDR"], ENT_QUOTES, 'UTF-8');
                 }
              $display_address = $addr;
              $addr = urlencode($addr);

              $url = "http://maps.googleapis.com/maps/api/geocode/xml?address=".$addr."&sensor=false";
              $response = htp_get($url);
              $xmap = simplexml_load_string($response);
              $lat =  (float) $xmap->result->geometry->location->lat;
              $long = (float) $xmap->result->geometry->location->lng;

              if (!(strlen($lat) > 0)) //Request to Google Maps API failed
               {
                $url = $GLOBALS["HTTP_PATH_FROM_ROOT"]."/cgi-bin/geocode.cgi?address=".$addr;
                $response = htp_get($url);
                $xmap = simplexml_load_string($response);
                $lat =  (float) $xmap->lat;
                $long = (float) $xmap->lon;
                }
              }

         $message = '';
         if (MAINTENANCE_MODE == "Y")
         {
          $message = "<b class='error'>Visulate's property search feature is not currently available.  We are performing routine maintenance.</b>";
         }

         if ((strlen($lat) > 0) &&
             (strlen($long) > 0) &&
             (MAINTENANCE_MODE != "Y") &&
             (is_numeric($lat)) &&
             (is_numeric($long)) &&
             (($lat > 24) && ($lat < 32)) &&
             (($long < -79) && ($long > -87.85))
             )
           {

               $dbCity   = new RNTCities($smarty->connection);
               $dbSearch = new LISTSearch($smarty->connection);
               $dbReport = new PRReports($smarty->connection);
               $listings = $dbSearch->getGeoLocProperties($lat, $long);
               $companies = $dbSearch->getGeoCorp($lat, $long);
               $city = $dbCity->getGeoCity($lat, $long);
               $mls_listings = $dbReport->getGeoListings( $lat, $long);

               $streetview = $dbReport->get_streetview_url($lat, $long);
               $smarty->assign("streetview", $streetview);


//               print_r($mls_listings);
               if (count($listings) > 0)
                   {$smarty->assign('listings', $listings);
                    $puma = $dbSearch->getPumaSummary($listings[0]["PUMA"]);}
               if (count($companies) > 0)
                   {$smarty->assign('companies', $companies);}
               if (count($mls_listings) > 0)
                   {$smarty->assign('mls_listings', $mls_listings);}
               if ($puma)
                   {$smarty->assign('puma', $puma);}

               $message = $message.count($listings)." properties and ".count($companies)." companies were found within 150 meters of this location";

               $smarty->assign('lat', $lat);
               $smarty->assign('lon', $long);
               $smarty->assign('city', $city);
            }
          else{
               if (strlen($addr) > 0)
                {
                 $message = " Visulate didn't find the location ".$display_address."<br/>
                 <b class='error'>Enter <i>street address, city, state</i> or <i>street address, ZIP code</i>.</b><br/>
                 or try using the Google search box below.";
                }
               }

       $dbCity   = new RNTCities($smarty->connection);
       $backgroundImg = $dbCity->getRandomImage();
       $smarty->assign("backgroundImg", $backgroundImg);

       $smarty->assign("PrmAddr", $display_address);
       $smarty->assign("pageTitle", "Visulate - Search Florida Real Estate");
       $smarty->assign("pageDesc", "Search Visulate's database of more than 8 million properties and 1.7 million companies in Florida");
       $smarty->assign("message", $message);
       $html_report = $smarty->display($template_prefix."-property-list.tpl");
   }
   
///////////////////////////////////////////////////
//Main Body
///////////////////////////////////////////////////
    $smarty = new SmartyInit('http');
    $dbReport = new PRReports($smarty->connection);

    $mobile_device = is_mobile_browser();
    if ($mobile_device) {$template_prefix = "mobile"; }
    else { $template_prefix = "visulate";}

    $rest_request = is_rest_request();
    if ($rest_request)
    {
      $template_prefix = "json";
      header('Content-Type: application/json');
    }

    $user = $smarty->user;
    if (!$user->isLogin())
    {
       //  $smarty->assign("pageDesc", "List of $state $county rental properties.");
      $smarty->assign("publicUser", "Y");
    }
    
    if (!$smarty->user->getRole())
    {
      $smarty->user->setRole("PUBLIC");
    }
  // retrive menu data from database
  require_once dirname(__FILE__)."/classes/database/rnt_menus.class.php";
  $rnt_menu  = new RNTMenu($smarty->connection);
  $is_mobile_browser = Context::getMobileDevice();

  if ($is_mobile_browser)
  {
   $menu_data = $rnt_menu->getConfigMenuMobi();
   $item_menu1 = htmlentities(@$_REQUEST["m1"], ENT_QUOTES);
   
   if (!$item_menu2) $item_menu1 = "m_visulate_search";
   $item_menu2 = htmlentities(@$_REQUEST["REPORT_CODE"], ENT_QUOTES);

   if  ( $item_menu2 == "COMMERCIAL"
      || $item_menu2 == "SALES"
      || $item_menu2 == "LAND" 
      || $item_menu2 == "CITY")
     { $item_menu2 = "m_CITY"; }
   elseif ( $item_menu2 == "SEARCH")
     { $item_menu2 = "m_PROPERTY_DETAILS"; }

   if (htmlentities($_REQUEST["CORP_ID"], ENT_QUOTES)||
       htmlentities($_REQUEST["corp_id"], ENT_QUOTES))
     { $item_menu2 = "m_PROPERTY_DETAILS"; }

    if (!$item_menu2)  $item_menu2 = htmlentities(@$_REQUEST["m2"], ENT_QUOTES);
    
    if (!$item_menu2) $item_menu2 = "m_PROPERTY_DETAILS";
    if (substr($item_menu2, 0, 2) != "m_") $item_menu2 = "m_".$item_menu2;
    
    $report_code = str_replace("m_", "", $item_menu2);
  }
  else
  {
   $menu_data = $rnt_menu->getConfigMenuPC();
   $item_menu1 = "visulate_search";
   $item_menu2 = htmlentities(@$_REQUEST["REPORT_CODE"], ENT_QUOTES);
   $report_code = $item_menu2;
  
   if  ( $item_menu2 == "COMMERCIAL"
     || $item_menu2 == "SALES"
     || $item_menu2 == "LAND"
     || $item_menu2 == "SEARCH")
     {$item_menu2 = "CITY";}
  
    if (!$item_menu2)  $item_menu2 = htmlentities(@$_REQUEST["m2"], ENT_QUOTES);
    if (!$item_menu2)  $item_menu2 = "LISTINGS";
   }

  $menu = new Menu($item_menu1, $item_menu2, $menu_data, $smarty->user);
  $smarty->assign('menuObj',$menu);
//print_r($menu);
   
  //populate report list array for menu
  
  $reportList = array();
  if (!$report_code) $report_code = $item_menu2;
  $x=array();
  
     $x["href"] = "rental/visulate_search.php?REPORT_CODE=LISTINGS&qtype=COMMERCIAL&state=FL&county=MIAMI-DADE&ZCODE=Sale/Lease:13&MAX=A_MEDIAN";
     $x["title"] = "Commercial Real Estate";
     $x["code"] = "COMMERCIAL";
     $reportList["COMMERCIAL"] = $x;

     $x["href"] = "rental/visulate_search.php?REPORT_CODE=LISTINGS&qtype=LAND&state=FL&county=BREVARD&ZCODE=32926&MAX=A_MAX";
     $x["title"] = "Vacant Land";
     $x["code"] = "LAND";
     $reportList["LAND"] = $x;

     $x["href"] = "rental/visulate_search.php?REPORT_CODE=LISTINGS&qtype=RESIDENTIAL&state=FL&county=BREVARD&ZCODE=32952&MAX=A_MEDIAN";
     $x["title"] = "Residential";
     $x["code"] = "RESIDENTIAL";
     $reportList["RESIDENTIAL"] = $x;




/*
  if (!$report_code || !array_key_exists($report_code, $reportList)){
     reset($reportList);
    $report_code = key($reportList);
 }
 */

 $qtype = htmlentities($_REQUEST["qtype"], ENT_QUOTES);
 if ($qtype)  $smarty->assign("qtype", $qtype);

 $smarty->assign("reportCode", $report_code);
 $smarty->assign("ReportList", $reportList);


 if ($report_code) {
     // create form
     $form = new HTML_QuickForm('reports', 'POST');
     $IsPost = $form->isSubmitted();
     $header = @$reports[$report_code]["title"];
     $form->addElement("hidden", "REPORT_CODE", $report_code);

     if ($IsPost )
     { 
      $report_data = array();
       if ($report_code == "PROPERTY_DETAILS" or $report_code == "CITY")
       {
        process_search($smarty, $template_prefix);
       }
       elseif ($_POST["REPORT_CODE"] == "SAVE2BU")
       {
        save2BU($smarty);
        display_property($smarty, $template_prefix, $dbReport);
       }

           
      }
      elseif ($_SERVER['REQUEST_METHOD']=='GET')
        { 
 //       $report_code = (htmlentities($_REQUEST["REPORT_CODE"], ENT_QUOTES));
    
       if (htmlentities($_REQUEST["OWNER_ID"], ENT_QUOTES))
         {
          display_owner($smarty, $template_prefix, $dbReport);
         }
       elseif (htmlentities($_REQUEST["PROP_ID"], ENT_QUOTES)&&
               ($report_code != "LISTINGS"))
         {
          display_property($smarty, $template_prefix, $dbReport);
         }
       elseif (htmlentities($_REQUEST["CORP_ID"], ENT_QUOTES)||
               htmlentities($_REQUEST["corp_id"], ENT_QUOTES))
         {
          display_corp($smarty, $template_prefix, $dbReport);
         }
       else
         {
           if ($report_code == "RENTALS")
            {
            process_rentals($smarty, $template_prefix);
            }
           elseif ($report_code == "CITY")
            {
            process_city($smarty, $template_prefix);
            }
           elseif ($report_code == "LISTINGS")
            {
            process_listing($smarty, $template_prefix, $dbReport);
            }
           elseif ($report_code == "AJAX")
            {
            ajax_listings($smarty, $template_prefix, $dbReport);
            }
           elseif ($report_code == "SALES")
            {
            sales_request($smarty, $template_prefix, $dbReport);
            }
           elseif ($report_code == "COMMERCIAL")
            {
            commercial_sales($smarty, $template_prefix, $dbReport);
            }
           elseif ($report_code == "LAND")
            {
            land_sales($smarty, $template_prefix, $dbReport);
            }
           elseif ($report_code == "AGENT")
            {
             find_agent($smarty, $template_prefix, $dbReport);
            }
           elseif ($report_code == "SEARCH"||$report_code == PROPERTY_DETAILS)
            {
             process_search($smarty, $template_prefix);
             
            }

           else
            {
            $smarty->assign("pageTitle", "Search Florida Property Records");
            $smarty->assign("pageDesc", "Visulate maintains records for over 8,000,000 properties in Florida. Search for usage details, size, building features, current owner and sales history for any property in Brevard, Orange or Volusia county.");
             $html_report = $smarty->display($template_prefix."-property-list.tpl");
            }
         }
      }
  }
  
?>
