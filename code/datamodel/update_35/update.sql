--------------------------------------------------------------------------
-- Play this script in TESTRNTMGR@XE to make it look like RNTMGR@XE
--                                                                      --
-- Please review the script before using it to make sure it won't       --
-- cause any unacceptable data loss.                                    --
--                                                                      --
-- TESTRNTMGR@XE Schema Extracted by User TESTRNTMGR 
-- RNTMGR@XE Schema Extracted by User RNTMGR 
DROP PACKAGE BODY RNT_SUPPLIERS_PKG;

DROP PACKAGE RNT_SUPPLIERS_PKG;

ALTER TABLE RNT_SUPPLIERS
 DROP PRIMARY KEY CASCADE;

SHOW ERRORS;

CREATE SEQUENCE RNT_BU_SUPPLIERS_SEQ
  START WITH 79
  MAXVALUE 999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE TABLE RNT_SUPPLIER_TYPES
(
  SUPPLIER_TYPE_ID    NUMBER                    NOT NULL,
  SUPPLIER_TYPE_NAME  VARCHAR2(30 BYTE)         NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE RNT_SUPPLIER_TYPES IS 'Supplier types.';

COMMENT ON COLUMN RNT_SUPPLIER_TYPES.SUPPLIER_TYPE_ID IS 'Primary Key';

COMMENT ON COLUMN RNT_SUPPLIER_TYPES.SUPPLIER_TYPE_NAME IS 'Name of type';

CREATE UNIQUE INDEX RNT_SUPPLIER_TYPES_PK ON RNT_SUPPLIER_TYPES
(SUPPLIER_TYPE_ID)
LOGGING
NOPARALLEL;

ALTER TABLE RNT_SUPPLIER_TYPES
 ADD CONSTRAINT RNT_SUPPLIER_TYPES_PK
 PRIMARY KEY
 (SUPPLIER_TYPE_ID);

SHOW ERRORS;

CREATE TABLE RNT_SUPPLIERS_ALL
(
  SUPPLIER_ID       NUMBER                      NOT NULL,
  NAME              VARCHAR2(60 BYTE)           NOT NULL,
  PHONE1            VARCHAR2(30 BYTE)           NOT NULL,
  PHONE2            VARCHAR2(30 BYTE),
  ADDRESS1          VARCHAR2(60 BYTE),
  ADDRESS2          VARCHAR2(60 BYTE),
  CITY              VARCHAR2(30 BYTE),
  STATE             VARCHAR2(2 BYTE),
  ZIPCODE           NUMBER,
  EMAIL_ADDRESS     VARCHAR2(100 BYTE),
  COMMENTS          VARCHAR2(4000 BYTE),
  SUPPLIER_TYPE_ID  NUMBER                      NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE RNT_SUPPLIERS_ALL IS 'RNT_SUPPLIERS records details of contractors, and service suppliers.  ';

COMMENT ON COLUMN RNT_SUPPLIERS_ALL.SUPPLIER_ID IS 'System generated PK';

COMMENT ON COLUMN RNT_SUPPLIERS_ALL.NAME IS 'Contractor Name';

COMMENT ON COLUMN RNT_SUPPLIERS_ALL.PHONE1 IS 'Primary phone number';

COMMENT ON COLUMN RNT_SUPPLIERS_ALL.PHONE2 IS 'Alternate phone number';

COMMENT ON COLUMN RNT_SUPPLIERS_ALL.ADDRESS1 IS 'Address line 1';

COMMENT ON COLUMN RNT_SUPPLIERS_ALL.ADDRESS2 IS 'Address line 2';

COMMENT ON COLUMN RNT_SUPPLIERS_ALL.CITY IS 'City';

COMMENT ON COLUMN RNT_SUPPLIERS_ALL.STATE IS 'State';

COMMENT ON COLUMN RNT_SUPPLIERS_ALL.ZIPCODE IS 'Zipcode';

COMMENT ON COLUMN RNT_SUPPLIERS_ALL.SUPPLIER_TYPE_ID IS 'Supplier Type FK';

COMMENT ON COLUMN RNT_SUPPLIERS_ALL.EMAIL_ADDRESS IS 'email address';

COMMENT ON COLUMN RNT_SUPPLIERS_ALL.COMMENTS IS 'Notes and comments';

CREATE UNIQUE INDEX RNT_SUPPLIERS_ALL_U1 ON RNT_SUPPLIERS_ALL
(SUPPLIER_TYPE_ID, NAME, CITY, PHONE1)
LOGGING
NOPARALLEL;

CREATE UNIQUE INDEX RNT_CONTRACTORS_ALL_PK ON RNT_SUPPLIERS_ALL
(SUPPLIER_ID)
LOGGING
NOPARALLEL;

ALTER TABLE RNT_SUPPLIERS_ALL
 ADD CONSTRAINT RNT_CONTRACTORS_ALL_PK
 PRIMARY KEY
 (SUPPLIER_ID);

ALTER TABLE RNT_SUPPLIERS_ALL
 ADD CONSTRAINT RNT_SUPPLIERS_ALL_U1
 UNIQUE (SUPPLIER_TYPE_ID, NAME, CITY, PHONE1);

CREATE TABLE RNT_BU_SUPPLIERS
(
  BU_SUPPLIER_ID  NUMBER                        NOT NULL,
  BUSINESS_ID     NUMBER                        NOT NULL,
  SUPPLIER_ID     NUMBER                        NOT NULL,
  TAX_IDENTIFIER  VARCHAR2(20 BYTE),
  NOTES           VARCHAR2(4000 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE RNT_BU_SUPPLIERS IS 'Assign supplier on business unit.';

COMMENT ON COLUMN RNT_BU_SUPPLIERS.BU_SUPPLIER_ID IS 'Primary key';

COMMENT ON COLUMN RNT_BU_SUPPLIERS.BUSINESS_ID IS 'Business unit FK';

COMMENT ON COLUMN RNT_BU_SUPPLIERS.SUPPLIER_ID IS 'Supplier FK';

COMMENT ON COLUMN RNT_BU_SUPPLIERS.TAX_IDENTIFIER IS 'SSN or tax id';

COMMENT ON COLUMN RNT_BU_SUPPLIERS.NOTES IS 'Notes';

CREATE UNIQUE INDEX RNT_BU_SUPPLIERS_U1 ON RNT_BU_SUPPLIERS
(BUSINESS_ID, SUPPLIER_ID)
LOGGING
NOPARALLEL;

CREATE UNIQUE INDEX RNT_BU_SUPPLIERS_PK ON RNT_BU_SUPPLIERS
(BU_SUPPLIER_ID)
LOGGING
NOPARALLEL;

ALTER TABLE RNT_BU_SUPPLIERS
 ADD CONSTRAINT RNT_BU_SUPPLIERS_PK
 PRIMARY KEY
 (BU_SUPPLIER_ID);

ALTER TABLE RNT_BU_SUPPLIERS
 ADD CONSTRAINT RNT_BU_SUPPLIERS_U1
 UNIQUE (BUSINESS_ID, SUPPLIER_ID);

CREATE OR REPLACE FORCE VIEW RNT_SUPPLIERS_ALL_V
(SUPPLIER_ID, NAME, PHONE1, PHONE2, ADDRESS1, 
 ADDRESS2, CITY, STATE, ZIPCODE, EMAIL_ADDRESS, 
 COMMENTS, SUPPLIER_TYPE_ID, CHECKSUM)
AS 
select s.SUPPLIER_ID
,      s.NAME
,      s.PHONE1
,      s.PHONE2
,      s.ADDRESS1
,      s.ADDRESS2
,      s.CITY
,      s.STATE
,      s.ZIPCODE
,      s.EMAIL_ADDRESS
,      s.COMMENTS
,      s.SUPPLIER_TYPE_ID
,      rnt_sys_checksum_rec_pkg.get_checksum('SUPPLIER_ID='||s.SUPPLIER_ID||'NAME='||s.NAME||'PHONE1='||s.PHONE1||'PHONE2='||s.PHONE2||'ADDRESS1='||s.ADDRESS1||'ADDRESS2='||s.ADDRESS2||'CITY='||s.CITY||'STATE='||s.STATE||'ZIPCODE='||s.ZIPCODE||'EMAIL_ADDRESS='||s.EMAIL_ADDRESS||'COMMENTS='||s.COMMENTS||'SUPPLIER_TYPE_ID'||s.SUPPLIER_TYPE_ID) as CHECKSUM
from RNT_SUPPLIERS_ALL s;

CREATE OR REPLACE FORCE VIEW RNT_BU_SUPPLIERS_V
(BU_SUPPLIER_ID, BUSINESS_ID, SUPPLIER_ID, TAX_IDENTIFIER, NOTES, 
 CHECKSUM)
AS 
select BU_SUPPLIER_ID
,      BUSINESS_ID
,      SUPPLIER_ID
,      TAX_IDENTIFIER
,      NOTES
,      rnt_sys_checksum_rec_pkg.get_checksum('BU_SUPPLIER_ID='||BU_SUPPLIER_ID||'BUSINESS_ID='||BUSINESS_ID||'SUPPLIER_ID='||SUPPLIER_ID||'TAX_IDENTIFIER='||TAX_IDENTIFIER||'NOTES='||NOTES) as CHECKSUM
from RNT_BU_SUPPLIERS;

CREATE OR REPLACE FORCE VIEW RNT_SUPPLIERS_V
(SUPPLIER_ID, NAME, PHONE1, PHONE2, ADDRESS1, 
 ADDRESS2, CITY, STATE, ZIPCODE, EMAIL_ADDRESS, 
 COMMENTS, SUPPLIER_TYPE_ID, BU_SUPPLIER_ID, BUSINESS_ID, TAX_IDENTIFIER, 
 NOTES, SUPPLIER_TYPE_NAME)
AS 
select 
   s.SUPPLIER_ID, s.NAME, s.PHONE1, 
   s.PHONE2, s.ADDRESS1, s.ADDRESS2, 
   s.CITY, s.STATE, s.ZIPCODE, 
   s.EMAIL_ADDRESS, s.COMMENTS, s.SUPPLIER_TYPE_ID,
   bs.BU_SUPPLIER_ID, 
   bs.BUSINESS_ID, 
   bs.TAX_IDENTIFIER, 
   bs.NOTES,
   st.SUPPLIER_TYPE_NAME
from RNT_SUPPLIERS_ALL s,
     RNT_BU_SUPPLIERS bs,
     RNT_SUPPLIER_TYPES st
where st.SUPPLIER_TYPE_ID = s.SUPPLIER_TYPE_ID
  and bs.SUPPLIER_ID = s.SUPPLIER_ID;

CREATE OR REPLACE FORCE VIEW RNT_ACCOUNTS_PAYABLE_V
(AP_ID, PAYMENT_DUE_DATE, AMOUNT, PAYMENT_TYPE_ID, EXPENSE_ID, 
 LOAN_ID, SUPPLIER_ID, PAYMENT_PROPERTY_ID, CHECKSUM, BUSINESS_ID, 
 RECORD_TYPE, INVOICE_NUMBER, SUPPLIER_NAME, PAYMENT_TYPE_NAME, PROPERTY_NAME)
AS 
select ap.AP_ID
,      ap.PAYMENT_DUE_DATE
,      ap.AMOUNT
,      ap.PAYMENT_TYPE_ID
,      ap.EXPENSE_ID
,      ap.LOAN_ID
,      ap.SUPPLIER_ID
,      ap.PAYMENT_PROPERTY_ID
,      ap.CHECKSUM
,      ap.BUSINESS_ID
,      ap.RECORD_TYPE
,      ap.INVOICE_NUMBER
,      s.NAME as SUPPLIER_NAME
,      pt.PAYMENT_TYPE_NAME
,      p.ADDRESS1 as PROPERTY_NAME    
from RNT_ACCOUNTS_PAYABLE_ALL_V ap,
     RNT_SUPPLIERS_ALL s,
     RNT_PAYMENT_TYPES pt,
     RNT_PROPERTIES p
where ap.SUPPLIER_ID = s.SUPPLIER_ID
  and pt.PAYMENT_TYPE_ID = ap.PAYMENT_TYPE_ID
  and p.PROPERTY_ID = ap.PAYMENT_PROPERTY_ID
  and ap.RECORD_TYPE = RNT_ACCOUNTS_PAYABLE_CONST_PKG.CONST_EXPENSE_TYPE_VAL();

CREATE OR REPLACE FORCE VIEW RNT_ACCNTS_PAYABLE_EXPENSES_V
(AP_ID, PAYMENT_DUE_DATE, AMOUNT, PAYMENT_TYPE_ID, EXPENSE_ID, 
 LOAN_ID, SUPPLIER_ID, PAYMENT_PROPERTY_ID, CHECKSUM, SUPPLIER_NAME, 
 PROPERTY_ID, PROPERTY_NAME, BUSINESS_ID, PAYMENT_TYPE_NAME, PAYMENT_DATE, 
 RECORD_TYPE, INVOICE_NUMBER)
AS 
select ap.AP_ID
,      ap.PAYMENT_DUE_DATE
,      ap.AMOUNT
,      ap.PAYMENT_TYPE_ID
,      ap.EXPENSE_ID
,      ap.LOAN_ID
,      ap.SUPPLIER_ID
,      ap.PAYMENT_PROPERTY_ID
,      ap.CHECKSUM
,      s.NAME as SUPPLIER_NAME
,      ex.PROPERTY_ID
,      p.ADDRESS1 as PROPERTY_NAME
,      ap.BUSINESS_ID
,      pt.PAYMENT_TYPE_NAME
,      pa.PAYMENT_DATE
,      ap.RECORD_TYPE
,      ap.INVOICE_NUMBER
from RNT_ACCOUNTS_PAYABLE_ALL_V ap,
     RNT_SUPPLIERS_ALL s,
     RNT_PROPERTY_EXPENSES ex,
     RNT_PROPERTIES p,
     RNT_PAYMENT_TYPES pt,
     RNT_PAYMENT_ALLOCATIONS pa 
where s.SUPPLIER_ID = ap.SUPPLIER_ID
  and ap.EXPENSE_ID = ex.EXPENSE_ID 
  and p.PROPERTY_ID = ex.PROPERTY_ID
  and pt.PAYMENT_TYPE_ID = ap.PAYMENT_TYPE_ID
  and pa.AP_ID(+) = ap.AP_ID
  and ap.RECORD_TYPE in (RNT_ACCOUNTS_PAYABLE_CONST_PKG.CONST_EXPENSE_TYPE_VAL(), RNT_ACCOUNTS_PAYABLE_CONST_PKG.CONST_GENERATE_TYPE_VAL());

ALTER PACKAGE RNT_SECTION8_OFFICES_PKG COMPILE;

ALTER PACKAGE RNT_SECTION8_OFFICES_PKG COMPILE BODY;

ALTER PACKAGE RNT_PAYMENTS_PKG COMPILE BODY;

ALTER TABLE RNT_SUPPLIERS_ALL
 ADD CONSTRAINT RNT_SUPPLIERS_ALL_FK1 
 FOREIGN KEY (SUPPLIER_TYPE_ID) 
 REFERENCES RNT_SUPPLIER_TYPES (SUPPLIER_TYPE_ID);

ALTER TABLE RNT_BU_SUPPLIERS
 ADD CONSTRAINT RNT_BU_SUPPLIERS_FK2 
 FOREIGN KEY (SUPPLIER_ID) 
 REFERENCES RNT_SUPPLIERS_ALL (SUPPLIER_ID);

ALTER TABLE RNT_BU_SUPPLIERS
 ADD CONSTRAINT RNT_BU_SUPPLIERS_FK1 
 FOREIGN KEY (BUSINESS_ID) 
 REFERENCES RNT_BUSINESS_UNITS (BUSINESS_ID);
